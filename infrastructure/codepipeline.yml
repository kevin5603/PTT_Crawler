AWSTemplateFormatVersion : "2010-09-09"
Parameters:
  GitProviderType:
    Type: String
    Default: "GitHub"
  FullRepositoryId:
    Type: String
    Default: "kevin5603/PTT_Crawler"
  MainGitBranch:
    Type: String
    Default: "main"
  SamDeployTemplatePath:
    Type: String
    Default: "deploy/template.yml"
  BuildRegion:
    Type: String
    Default: "us-west-2"
  DeployLambdaStackName:
    Type: String
    Default: "ptt-crawler-function-stack"
  PackageTemplate:
    Type: String
    Default: "package.yml"
  PipelineStackName:
    Type: String
    Default: "ptt-crawler-pipeline-stack"
Resources:
  CodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: PttCrawlerGitHub
      ProviderType: !Ref GitProviderType
  CodeBuildProjectBuildAndPackage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_DEPLOY_TEMPLATE_PATH
            Value: !Ref SamDeployTemplatePath
          - Name: ENV_PACKAGE_TEMPLATE
            Value: !Ref PackageTemplate
          - Name: BUILD_REGION
            Value: !Ref BuildRegion
          - Name: BUILD_ARTIFACT_BUCKET
            Value: !Ref BuildArtifactsBucket
          - Name: DEPLOY_PIPELINE_STACK_NAME
            Value: !Ref PipelineStackName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/pipeline/buildspec_build_package.yml
      Cache:
        Type: S3
        Location: !Ref BuildArtifactsBucket
  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/pipeline/buildspec_deploy.yml
      Cache:
        Type: S3
        Location: !Ref BuildArtifactsBucket
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref MainGitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::infrastructure/codepipeline.yml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "PipelineStackName": "${PipelineStackName}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2
        - Name: BuildAndPackage
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildAndPackage
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: DeployProd
          Actions:
            - Name: DeployProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              RunOrder: 2
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeploy
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV_PACKAGE_TEMPLATE", "value": "${PackageTemplate}"},
                    {"name": "ENV_REGION", "value": "${BuildRegion}"},
                    {"name": "ENV_STACK_NAME", "value": "${DeployLambdaStackName}"},
                    {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${PipelineStackCloudFormationExecutionRole.Arn}"},
                    {"name": "ENV_BUCKET", "value": "${ProdArtifactBucket}"}
                  ]
              InputArtifacts:
                - Name: BuildArtifactAsZip
  ArticleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: article
      KeySchema:
        - AttributeName: link
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: link
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        AttributeName: "expire"
        Enabled: true
  KeywordTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: keyword
      KeySchema:
        - AttributeName: board
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: board
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  KeywordHistory:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: keywordhistory
      KeySchema:
        - AttributeName: userIdAndLinkId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: userIdAndLinkId
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  ProdArtifactBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: !Ref CodeStarConnection
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - PipelineArtifactsBucket
                    - Arn
              - Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Effect: Allow
                Resource:
                  Fn::Sub: ${PipelineArtifactsBucket.Arn}/*

        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt CodeBuildProjectBuildAndPackage.Arn
                  - !GetAtt CodeBuildProjectDeploy.Arn
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - cloudformation.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"
                  - !Sub "arn:${AWS::Partition}:s3:::${BuildArtifactsBucket}/*"
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource: "*"
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
Outputs:
  DynamoDbArn:
    Value: !GetAtt KeywordTable.Arn
